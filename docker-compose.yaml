version: "3.8"

# Prod
# volumes:
#     data-volume:

services:
    app:
        build:
            context: .
            target: fpm-dev
        volumes:
            - .:/usr/app/:cached
            - .docker/app-dev/extra.ini:/usr/local/etc/php/conf.d/extra.ini
            - .docker/app-dev/www.conf:/usr/local/etc/php-fpm.d/www.conf
            - /usr/app/node_modules/
        extra_hosts:
            - host.docker.internal:host-gateway
        # Prod
        # build:
        #     context: .
        #     target: fpm-prod
        # depends_on:
        #     - database
        # environment:
        #     APP_ENV: staging
        #     RESET_DATABASE: true
        # volumes:
        #     - data-volume:/usr/app/web/sites/default/files
        # healthcheck:
        #     test: ["CMD", "healthcheck"]
        #     start_period: 1m
    nginx:
        image: nginx:1.21
        ports:
            - 8080:80
            - 8443:443
        volumes:
            - .docker/nginx-dev/nginx.conf:/etc/nginx/nginx.conf
            - .certs:/usr/app/.certs:ro,cached
            - ./web:/usr/app/web:ro,cached
        # Prod
        # build:
        #     context: .
        #     target: nginx-prod
        # depends_on:
        #     - app
        # volumes:
        #     - data-volume:/usr/app/web/sites/default/files
        # healthcheck:
        #     test: service nginx status || exit 1
        #     start_period: 1m
    database:
        image: postgres:14.1
        environment:
            POSTGRES_DB: drupal
            POSTGRES_USER: drupal
            POSTGRES_PASSWORD: drupal
        ports:
            - 8432:5432
        # Prod
        # healthcheck:
        #     test: ["CMD-SHELL", "pg_isready -U postgres"]
    mailhog:
        image: mailhog/mailhog
        ports:
            - 8025:8025
