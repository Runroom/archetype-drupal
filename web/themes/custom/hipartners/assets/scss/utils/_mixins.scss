@mixin fluid-type($min-font-size, $max-font-size, $min-vw: 320px, $max-vw: 1440px) {

    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);

    @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
        font-size: $min-font-size;

        @media only screen and (min-width: $min-vw) {
            font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
        }

        @include retina ($min-vw) {
            font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - 2 * #{$min-vw}) / (2 * #{strip-unit($max-vw - $min-vw)})));
        }

        @media only screen and (min-width: $max-vw) {
            font-size: get-rems($max-font-size);
        }
    }

    @else {
        @error "Detected mixed units. Please use the same units for all parameters.";
    }
}

@mixin retina($min-vw: 320px) {
    @media
        only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: $min-vw),
        only screen and (min--moz-device-pixel-ratio: 2) and (min-width: $min-vw),
        only screen and (-o-min-device-pixel-ratio: 2/1) and (min-width: $min-vw),
        only screen and (min-device-pixel-ratio: 2) and (min-width: $min-vw),
        only screen and (min-resolution: 192dpi) and (min-width: $min-vw),
        only screen and (min-resolution: 2dppx) and (min-width: $min-vw) {
        @content;
    }
}

@mixin transition($type: all, $time: .3s, $ease: ease-in-out) {
    transition: $type $time $ease;
}

@mixin indented-line($top: 8px, $left: 0, $paddingLeft: 44px, $leftBig: -47px, $height: 1px, $color: $c-lightGrey) {
    padding-left: 0;
    position: relative;

    @include breakpoint($s960) {
        padding-left: $paddingLeft;
    }

    &::before {
        content: none;

        @include breakpoint($s960) {
            background-color: $color;
            content: "";
            display: inline-block;
            height: $height;
            left: $left;
            position: absolute;
            top: $top;
            transition-delay: .6s;
            width: 0;

            @include transition($type: all, $time: .8s, $ease: cubic-bezier(.4, 0, .2, 1));
        }
    }
}

@mixin indented-line-animated($width: 25px) {
    &::before {
        @include breakpoint($s960) {
            width: $width;
        }
    }
}

@mixin paddingSectionXXL($sides: space()) {
    padding-bottom: space(2);

    @include breakpoint($s768) { padding-bottom: space(5); }

    @include breakpoint($s1240) { padding-bottom: space(8); }
}

@mixin paddingSectionXL($sides: space()) {
    padding-bottom: space(2);

    @include breakpoint($s768) { padding-bottom: space(4); }

    @include breakpoint($s1240) { padding-bottom: space(6); }
}

@mixin paddingSectionL($sides: space()) {
    padding-bottom: space(1.5);

    @include breakpoint($s768) { padding-bottom: space(3); }

    @include breakpoint($s1240) { padding-bottom: space(4); }
}

@mixin paddingSectionM($sides: space()) {
    padding-bottom: space(1.5);

    @include breakpoint($s768) { padding-bottom: space(2); }

    @include breakpoint($s1240) { padding-bottom: space(3); }
}

@mixin paddingSectionS() {
    padding: space();

    @include breakpoint($s768) { padding: space(2) space(); }
}

@mixin noPaddingBottom() {
    padding-bottom: 0;
}

@mixin marginBottomS() {
    margin-bottom: space();

    @include breakpoint($s768) { margin-bottom: space(1); }

    @include breakpoint($s1200) { margin-bottom: space(1.5); }
}

@mixin marginBottomM() {
    margin-bottom: space(1.5);

    @include breakpoint($s768) { margin-bottom: space(2); }

    @include breakpoint($s1200) { margin-bottom: space(3); }
}

@mixin marginBottomL() {
    margin-bottom: space(2);

    @include breakpoint($s768) { margin-bottom: space(3); }

    @include breakpoint($s1200) { margin-bottom: space(4); }
}

@mixin marginBottomXL() {
    margin-bottom: space(2);

    @include breakpoint($s768) { margin-bottom: space(4); }

    @include breakpoint($s1200) { margin-bottom: space(6); }
}

@mixin bottomCenterLine() {
    &::before {
        background-color: $c-main;
        bottom: space(-1.5);
        content: "";
        display: inline-block;
        height: 1px;
        position: absolute;
        width: 70px;
    }
}

@mixin veil($alpha: .4) {
    position: relative;

    &::before {
        background-color: rgba($c-black, $alpha);
        bottom: 0;
        content: "";
        display: block;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;

        @include breakpoint($s1200) {
            // background-image: linear-gradient(transparent 80%, rgba($c-secondary, $alpha) 85%, rgba($c-secondary, 1) 95%);
        }
    }
}

@mixin veilUp() {
    background-image: linear-gradient(transparent, rgba(0, 0, 0, .7));
}

@mixin veilDown() {
    background-image: linear-gradient(rgba(0, 0, 0, .7), transparent);
}

@mixin caps() {
    font-weight: 700;
    letter-spacing: get-rems(3px);
    text-decoration: none;
    text-transform: uppercase;
}

@mixin hoverLink($color: $c-white) {
    color: $color;
    position: relative;

    &::after {
        @include transition($type: all, $time: .3s, $ease: ease-in-out);

        border-bottom: 1px solid $color;
        bottom: get-rems(-2px);
        content: '';
        display: block;
        height: 1px;
        left: -1px;
        position: absolute;
        width: 0%;
    }

    &:hover, &.is-active {
        &::after {
            width: 98%;
        }
    }
}
