<?php

declare(strict_types=1);

use Drupal\Core\Site\Settings;
use Drupal\Core\StringTranslation\TranslatableMarkup;

function cookies_help(string $routeName): ?string
{
    switch ($routeName) {
        case 'help.page.cookies':
            $output = '';
            $output .= '<h3>' . new TranslatableMarkup('About') . '</h3>';
            $output .= '<p>' . new TranslatableMarkup('Cookies Module') . '</p>';

            return $output;
    }

    return null;
}

function cookies_theme(): array
{
    return [
        'cookies_page' => [
            'variables' => [
                'cookiesPage' => null,
                'cookies' => null,
                'form' => null,
            ],
        ],
    ];
}

function cookies_page_attachments_alter(array &$page): void
{
    if ('cookies.page' === \Drupal::routeMatch()->getRouteName()) {
        $repository = \Drupal::service('cookies.repository.cookies_entity');
        $cookies = $repository->getCookiesPage();
        $title = $cookies->label() ?: '';
        $description = $cookies->get('field_introduction')->value ?: '';

        $service = \Drupal::service('base_module.service.metadata');
        $service->attachMetadata($page, $title, $description);

        $page['#attached']['html_head'][] = [[
            '#tag' => 'meta',
            '#attributes' => [
                'name' => 'robots',
                'content' => 'noindex,follow',
            ],
        ], 'robots'];
    }
}

function cookies_preprocess_html(array &$variables): void
{
    $cookiesService = \Drupal::service('cookies.service.cookies');
    $variables['performanceCookies'] = $cookiesService->getCookiesByType('performance_cookies');
    $variables['targetingCookies'] = $cookiesService->getCookiesByType('targeting_cookies');
    $variables['cookiesDefaultDomain'] = Settings::get('cookies_default_domain');
}
